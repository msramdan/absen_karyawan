<?php

if (!defined('BASEPATH'))
    exit('No direct script access allowed');

class Izin extends CI_Controller
{
    function __construct()
    {
        parent::__construct();
        is_login();
        $this->load->model('Izin_model');
        $this->load->library('form_validation');
    }

    public function index()
    {
        $izin = $this->Izin_model->get_all();
        $data = array(
            'izin_data' => $izin,
        );
        $this->template->load('template','izin/izin_list', $data);
    }

    public function read($id) 
    {
        $row = $this->Izin_model->get_by_id(decrypt_url($id));
        if ($row) {
            $data = array(
				
		'id_izin' => $row->id_izin,
		'id_user' => $row->id_user,
		'tanggal' => $row->tanggal,
		'alasan_izin' => $row->alasan_izin,
		'status' => $row->status,
	    );
            $this->template->load('template','izin/izin_read', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('izin'));
        }
    }

    public function create() 
    {
        $data = array(
            'button' => 'Create',
            'action' => site_url('izin/create_action'),
	    'id_izin' => set_value('id_izin'),
	    'id_user' => set_value('id_user'),
	    'tanggal' => set_value('tanggal'),
	    'alasan_izin' => set_value('alasan_izin'),
	    'status' => set_value('status'),
	);
        $this->template->load('template','izin/izin_form', $data);
    }
    
    public function create_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
            $this->create();
        } else {
            $data = array(
		'id_user' => $this->input->post('id_user',TRUE),
		'tanggal' => $this->input->post('tanggal',TRUE),
		'alasan_izin' => $this->input->post('alasan_izin',TRUE),
		'status' => $this->input->post('status',TRUE),
	    );

            $this->Izin_model->insert($data);
            $this->session->set_flashdata('message', 'Create Record Success');
            redirect(site_url('izin'));
        }
    }
    
    public function update($id) 
    {
        $row = $this->Izin_model->get_by_id(decrypt_url($id));

        if ($row) {
            $data = array(
                'button' => 'Update',
                'action' => site_url('izin/update_action'),
		'id_izin' => set_value('id_izin', $row->id_izin),
		'id_user' => set_value('id_user', $row->id_user),
		'tanggal' => set_value('tanggal', $row->tanggal),
		'alasan_izin' => set_value('alasan_izin', $row->alasan_izin),
		'status' => set_value('status', $row->status),
	    );
            $this->template->load('template','izin/izin_form', $data);
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('izin'));
        }
    }
    
    public function update_action() 
    {
        $this->_rules();

        if ($this->form_validation->run() == FALSE) {
			$this->update(encrypt_url($this->input->post('id_izin', TRUE)));
        } else {
            $data = array(
		'id_user' => $this->input->post('id_user',TRUE),
		'tanggal' => $this->input->post('tanggal',TRUE),
		'alasan_izin' => $this->input->post('alasan_izin',TRUE),
		'status' => $this->input->post('status',TRUE),
	    );

            $this->Izin_model->update($this->input->post('id_izin', TRUE), $data);
            $this->session->set_flashdata('message', 'Update Record Success');
            redirect(site_url('izin'));
        }
    }
    
    public function delete($id) 
    {
        $row = $this->Izin_model->get_by_id(decrypt_url($id));

        if ($row) {
            $this->Izin_model->delete(decrypt_url($id));
            $this->session->set_flashdata('message', 'Delete Record Success');
            redirect(site_url('izin'));
        } else {
            $this->session->set_flashdata('message', 'Record Not Found');
            redirect(site_url('izin'));
        }
    }

    public function _rules() 
    {
	$this->form_validation->set_rules('id_user', 'id user', 'trim|required');
	$this->form_validation->set_rules('tanggal', 'tanggal', 'trim|required');
	$this->form_validation->set_rules('alasan_izin', 'alasan izin', 'trim|required');
	$this->form_validation->set_rules('status', 'status', 'trim|required');

	$this->form_validation->set_rules('id_izin', 'id_izin', 'trim');
	$this->form_validation->set_error_delimiters('<span class="text-danger">', '</span>');
    }

}

/* End of file Izin.php */
/* Location: ./application/controllers/Izin.php */
/* Please DO NOT modify this information : */
/* Generated by Harviacode Codeigniter CRUD Generator 2023-01-24 05:56:03 */
/* http://harviacode.com */